#!/usr/bin/make -f
export DH_VERBOSE=15
BUILDDIRS = openBVE/OpenBve openBVE/OpenBveApi \
 openBVE/OpenBveAts \
 openBVE/Sound.Flac openBVE/Sound.RiffWave \
 openBVE/Texture.Ace openBVE/Texture.BmpGifJpegPngTiff
TARGET = $(CURDIR)/debian/openbve
EXEC_TARGET = $(TARGET)/usr/lib/openbve
EXEC_PLUGIN_TARGET = $(EXEC_TARGET)/Plugins
#DEBUG_CONFIGURATION=Debug
DEBUG_CONFIGURATION=Release

configure: configure-stamp
configure-stamp:
	dh_testdir
	touch configure-stamp

build: build-arch build-indep
build-arch: build-stamp
build-indep: build-stamp
build-stamp: configure-stamp 
	dh_testdir
	for builddir in $(BUILDDIRS); do \
	  (cd $$builddir && xbuild /p:Configuration=$(DEBUG_CONFIGURATION) *.csproj) || exit 1; \
	done
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	rm -rf $(TARGET)
	for builddir in $(BUILDDIRS); do \
	  (cd $$builddir && xbuild /t:Clean *.csproj); \
	  rm -rf $$builddir/bin $$builddir/obj; \
	done
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs
	install -m 755 $(CURDIR)/openBVE/OpenBve/bin/$(DEBUG_CONFIGURATION)/OpenBve.exe $(EXEC_TARGET)
	#install -m 644 $(CURDIR)/openBVE/OpenBve/bin/$(DEBUG_CONFIGURATION)/OpenBve.exe.mdb $(EXEC_TARGET)
	install -m 755 $(CURDIR)/openBVE/OpenBveApi/bin/$(DEBUG_CONFIGURATION)/OpenBveApi.dll $(EXEC_TARGET)
	install -m 644 $(CURDIR)/openBVE/OpenBveApi/bin/$(DEBUG_CONFIGURATION)/OpenBveApi.dll.mdb $(EXEC_TARGET)
	install -m 755 -T $(CURDIR)/debian/openbve.wrapper $(TARGET)/usr/games/openbve
	install -m 755 $(CURDIR)/openBVE/OpenBveAts/bin/$(DEBUG_CONFIGURATION)/OpenBveAts.dll $(EXEC_PLUGIN_TARGET)
	install -m 755 $(CURDIR)/openBVE/Sound.Flac/bin/$(DEBUG_CONFIGURATION)/Sound.Flac.dll $(EXEC_PLUGIN_TARGET)
	install -m 755 $(CURDIR)/openBVE/Sound.RiffWave/bin/$(DEBUG_CONFIGURATION)/Sound.RiffWave.dll $(EXEC_PLUGIN_TARGET)
	install -m 755 $(CURDIR)/openBVE/Texture.Ace/bin/$(DEBUG_CONFIGURATION)/Texture.Ace.dll $(EXEC_PLUGIN_TARGET)
	install -m 755 $(CURDIR)/openBVE/Texture.BmpGifJpegPngTiff/bin/$(DEBUG_CONFIGURATION)/Texture.BmpGifJpegPngTiff.dll $(EXEC_PLUGIN_TARGET)
	lynx -dump -nolist $(CURDIR)/debian/changelog.html > $(TARGET)/usr/share/doc/openbve/changelog

binary-arch:
	# Do nothing

binary-indep: build install
	dh_testdir
	dh_testroot
	dh_installmenu
	dh_install
	dh_installcligac
	dh_installchangelogs
	dh_installdocs
	dh_fixperms
	dh_clifixperms
	dh_installman
	dh_installdeb
	dh_shlibdeps
	#dh_makeclilibs -i -V
	#dh_installcligac -i
	dh_clistrip
	dh_clideps -d -r --exclude-moduleref=AtsPluginProxy.dll
	dh_compress
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# For running manually
fetch-html:
	wget http://trainsimframework.org/changelog.html && mv changelog.html.1 changelog.html
	#wget http://trainsimframework.org/releasenotes.html && mv releasenotes.html.1 releasenotes.html
	wget http://trainsimframework.org/credits.html && mv credits.html.1 credits.html

binary: binary-indep
.PHONY: build clean binary-indep binary install configure
